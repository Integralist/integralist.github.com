<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on integralist</title>
    <link>http://www.integralist.co.uk/categories/security/</link>
    <description>Recent content in Security on integralist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 10 Dec 2016 13:00:00 +0100</lastBuildDate>
    
	<atom:link href="http://www.integralist.co.uk/categories/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Key Architecture</title>
      <link>http://www.integralist.co.uk/posts/key-architecture/</link>
      <pubDate>Sat, 10 Dec 2016 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/key-architecture/</guid>
      <description>Introduction Visual Breakdown Vulnerabilities? Conclusion  
Introduction Just a quick post to cover the key architecture I&amp;rsquo;m using currently. I&amp;rsquo;m very interested to know how others are doing things in the hope that I can improve the security of my setup.
 Note: I&amp;rsquo;m not a security paranoia nut, so I&amp;rsquo;m not looking for the most concrete solution. But definitely want to be sure I&amp;rsquo;m not missing anything obvious either</description>
    </item>
    
    <item>
      <title>Terminal Password Manager</title>
      <link>http://www.integralist.co.uk/posts/terminal-password-manager/</link>
      <pubDate>Wed, 19 Oct 2016 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/terminal-password-manager/</guid>
      <description>Introduction Installation Example Usage Exporting Data Synchronisation Mobile and GUI Applications MultiFactor Authentication Conclusion  
Introduction I&amp;rsquo;m guessing that you have an app like 1Password or KeePassX to manage your passwords and other login credentials and you&amp;rsquo;re now looking for a cheaper alternative, and also one that doesn&amp;rsquo;t rely on a GUI (although as you&amp;rsquo;ll see that&amp;rsquo;s still possible).
If so, then &amp;ldquo;Pass&amp;rdquo; might be something of interest to you as it offers you the ability to securely store information via the command line interface (e.</description>
    </item>
    
    <item>
      <title>Client Cert Authentication</title>
      <link>http://www.integralist.co.uk/posts/client-cert-authentication/</link>
      <pubDate>Sat, 03 Oct 2015 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/client-cert-authentication/</guid>
      <description>Introduction Directory Structure Configuration Building Running Verifying Revocation References Conclusion  
Introduction The purpose of this post is to demonstrate how to configure nginx to use client certificates for authenticated access to your back-end service (in this example: a Ruby/Sinatra application).
 Note: the focus of this post isn&amp;rsquo;t about Ruby/Sinatra so don&amp;rsquo;t worry if your back-end service is built with another programming language
 I won&amp;rsquo;t be going into the details of how most of it was set-up, as the majority of this was already documented in a previous blog post here: Setting up nginx with Docker so I recommend reading through that first if you&amp;rsquo;re new to Docker and nginx.</description>
    </item>
    
  </channel>
</rss>