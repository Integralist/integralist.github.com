<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on integralist</title>
    <link>http://www.integralist.co.uk/categories/development/</link>
    <description>Recent content in Development on integralist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 22 Nov 2017 13:00:00 +0100</lastBuildDate>
    
	<atom:link href="http://www.integralist.co.uk/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Practical Monitoring</title>
      <link>http://www.integralist.co.uk/posts/practical-monitoring/</link>
      <pubDate>Wed, 22 Nov 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/practical-monitoring/</guid>
      <description>Introduction Types of Monitoring Does it work? What metrics should we focus on? Frequency and Aggregation Data Collection Methods Frontend Monitoring Logging or Metrics? What else to check for? Conclusion  
Introduction I&amp;rsquo;ve just finished reading Practical Monitoring &amp;ldquo;Effective Strategies for the Real World&amp;rdquo; by Mike Julian. It&amp;rsquo;s a great book and highly recommended.
I&amp;rsquo;d like to share my thoughts on monitoring, based on both my past experience on the subject and also some interesting details found in Practical Monitoring.</description>
    </item>
    
    <item>
      <title>Observability Monitoring Instrumentation</title>
      <link>http://www.integralist.co.uk/posts/observability-monitoring-instrumentation/</link>
      <pubDate>Wed, 15 Nov 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/observability-monitoring-instrumentation/</guid>
      <description>In software engineering, there is a lot of confusion caused by the discussion around what exactly is meant by the word &amp;ldquo;observability&amp;rdquo; and how it relates to other words, such as &amp;ldquo;monitoring&amp;rdquo; and &amp;ldquo;instrumentation&amp;rdquo;.
We&amp;rsquo;re going to take a quick look at the definitions of these words and see if we can understand them without having to read through a 10,000 word essay on the finer details of the topic. This isn&amp;rsquo;t that blog post.</description>
    </item>
    
    <item>
      <title>Load Testing Guidelines</title>
      <link>http://www.integralist.co.uk/posts/load-testing-guidelines/</link>
      <pubDate>Mon, 13 Nov 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/load-testing-guidelines/</guid>
      <description>Introduction Use real datasets Identify collateral damage Stub services if necessary Distribute your traffic Automate for reproducible runs Consider disabling authentication Don&amp;rsquo;t immediately scale dependencies Send traffic from different geographical regions Decide if your tool should support reusing connections Start testing a single instance, before moving onto clusters Verify load using multiple strategies Reset your environment between test runs Document the results Tools  
Introduction This post should serve as a guideline for running load tests.</description>
    </item>
    
    <item>
      <title>Logging 101</title>
      <link>http://www.integralist.co.uk/posts/logging-101/</link>
      <pubDate>Sun, 12 Nov 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/logging-101/</guid>
      <description>Logs? Levels Quality  
Logs? Applications should record information/events to help make debugging (and understanding) what a program is doing easier.
Typically this information is recorded into a log file.
But in some cases it is preferred to send this information to stdout because it then becomes the responsibility of the operating system/environment to determine where and how those logs are stored.
To quote 12factor:
 A (service) never concerns itself with routing or storage of its output stream.</description>
    </item>
    
    <item>
      <title>Fastly Varnish</title>
      <link>http://www.integralist.co.uk/posts/fastly-varnish/</link>
      <pubDate>Thu, 02 Nov 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/fastly-varnish/</guid>
      <description>Introduction Varnish Default VCL Fastly Custom VCL Fastly Request Flow Diagram State Variables Persisting State Hit for Pass Serving Stale Logging Conclusion  
Introduction Varnish is an open-source HTTP accelerator.
More concretely it is a web application that acts like a HTTP reverse-proxy.
You place Varnish in front of your application servers (those that are serving HTTP content) and it will cache that content for you. If you want more information on what Varnish cache can do for you, then I recommend reading through their introduction article (and watching the video linked there as well).</description>
    </item>
    
    <item>
      <title>Profiling Go</title>
      <link>http://www.integralist.co.uk/posts/profiling-go/</link>
      <pubDate>Tue, 31 Oct 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/profiling-go/</guid>
      <description>Memory Management Types of Profiling Tools Matrix Analysis Steps Base Example ReadMemStats Pprof Trace Conclusion  
Memory Management Before we dive into the techniques and tools available for profiling Go applications, we should first understand a little bit about its memory model as this can help us to understand what it is we’re seeing in relation to memory consumption.
Go’s implementation is a parallel mark-and-sweep garbage collector. In the traditional mark-and-sweep model, the garbage collector would stop the program from running (i.</description>
    </item>
    
    <item>
      <title>Profiling Python</title>
      <link>http://www.integralist.co.uk/posts/profiling-python/</link>
      <pubDate>Tue, 31 Oct 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/profiling-python/</guid>
      <description>Memory Management Types of Profiling Tools Matrix Analysis Steps Base Example Timer Built-in module: timeit Built-in module: profiler Line Profiler Basic Memory Profiler Tracemalloc PyFlame (Flame Graphs) Conclusion  
Memory Management Before we dive into the techniques and tools available for profiling Python applications, we should first understand a little bit about its memory model as this can help us to understand what it is we’re seeing in relation to memory consumption.</description>
    </item>
    
    <item>
      <title>Dev Environments Within Docker Containers</title>
      <link>http://www.integralist.co.uk/posts/dev-environments-within-docker-containers/</link>
      <pubDate>Wed, 29 Mar 2017 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/dev-environments-within-docker-containers/</guid>
      <description>Introduction Python Go Mounting Volumes  
Introduction You&amp;rsquo;re a software engineer with a new laptop.
You&amp;rsquo;re going to be writing code in multiple languages.
You&amp;rsquo;re going to have projects of varying dependencies.
But you want to avoid the issues you&amp;rsquo;ve had in the past:
 Messy installations of lots of different software packages. Clogging up your system with programming language version managers.  You decide to use Docker.</description>
    </item>
    
    <item>
      <title>Multiple SSH Keys for Different GitHub Accounts</title>
      <link>http://www.integralist.co.uk/posts/multiple-ssh-keys-for-different-github-accounts/</link>
      <pubDate>Wed, 18 Nov 2015 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/multiple-ssh-keys-for-different-github-accounts/</guid>
      <description>Introduction The Problem? The Solution Creating a new Key SSH Config Optional Shell Function Alternatives? Another Alternative  
Introduction I recently had an issue with my GitHub set-up which has since prompted me to write this post. The issue I had was dealing with multiple GitHub accounts via SSH on a single laptop.
So I have a GitHub account under the username Integralist. This is a personal account, and up until recently I was also using it to access my work&amp;rsquo;s private repos (BBC and BBC-News).</description>
    </item>
    
    <item>
      <title>Setting Up Nginx With Docker</title>
      <link>http://www.integralist.co.uk/posts/setting-up-nginx-with-docker/</link>
      <pubDate>Tue, 04 Aug 2015 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/setting-up-nginx-with-docker/</guid>
      <description>Introduction Just give me the code Setting up nginx Setting up the Ruby application Linking your app to nginx Conclusion  
Introduction I wanted to learn about how to use the popular proxy server nginx for handling &amp;ldquo;reverse proxy&amp;rdquo; duties on a Ruby project I was working on. So I decided the easiest thing to do in order to play around with nginx (as I work on a MacBook Pro laptop), would be to install and run it (and my back-end application) within Docker containers.</description>
    </item>
    
  </channel>
</rss>