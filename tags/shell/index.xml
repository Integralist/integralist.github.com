<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on integralist</title>
    <link>http://www.integralist.co.uk/tags/shell/</link>
    <description>Recent content in Shell on integralist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 25 Nov 2016 13:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.integralist.co.uk/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding Man Pages</title>
      <link>http://www.integralist.co.uk/posts/understanding-man-pages/</link>
      <pubDate>Fri, 25 Nov 2016 13:00:00 +0000</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/understanding-man-pages/</guid>
      <description>Introduction Sections Sub sections Accessing different sections  
Introduction Your operating system provides manual pages that explain what specific commands do and where they can be located on your computer.
Most of us are at least familiar with opening a terminal and typing:
man &amp;lt;some_command&amp;gt;  But you might be confused, when you see a manual page informing you to check out &amp;lt;another_command&amp;gt;(2). For example, you might be shown the message at the end of a man page that says See also: chmod(2).</description>
    </item>
    
    <item>
      <title>Terminal Password Manager</title>
      <link>http://www.integralist.co.uk/posts/terminal-password-manager/</link>
      <pubDate>Wed, 19 Oct 2016 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/terminal-password-manager/</guid>
      <description>Introduction Installation Example Usage Exporting Data Synchronisation Mobile and GUI Applications MultiFactor Authentication Conclusion  
Introduction I&amp;rsquo;m guessing that you have an app like 1Password or KeePassX to manage your passwords and other login credentials and you&amp;rsquo;re now looking for a cheaper alternative, and also one that doesn&amp;rsquo;t rely on a GUI (although as you&amp;rsquo;ll see that&amp;rsquo;s still possible).
If so, then &amp;ldquo;Pass&amp;rdquo; might be something of interest to you as it offers you the ability to securely store information via the command line interface (e.</description>
    </item>
    
    <item>
      <title>Terminal Debugging Utilities</title>
      <link>http://www.integralist.co.uk/posts/terminal-debugging-utilities/</link>
      <pubDate>Mon, 12 Sep 2016 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/terminal-debugging-utilities/</guid>
      <description>Introduction Prerequisites  TCP and HTTP OSI Model  Utilities  top: check running processes for cpu and memory utilisation ps: see what processes are running strace: monitor interactions between processes lsof: list of open files netstat: monitoring network traffic ifconfig: configure or review your network interfaces iftop: monitors network traffic and displays table of bandwidth usage iptraf: monitoring network traffic (more visual than netstat, not as detailed) tcpdump: network packet sniffer wireshark: network packet sniffer and analyser (gui) tshark: network packet sniffer and analyser telnet: utility for communicating with another host  Honorable mentions Conclusion</description>
    </item>
    
    <item>
      <title>Bash Watchtower</title>
      <link>http://www.integralist.co.uk/posts/bash-watchtower/</link>
      <pubDate>Thu, 03 Mar 2016 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/bash-watchtower/</guid>
      <description>Introduction How does it work? Comparison Code Explanation Conclusion  
Introduction This is a quick post to demonstrate how I use a simple Bash shell script to report when web pages are failing (e.g. returning a non-200 HTTP status code). It does this by sending notifications of the URL which returned a non-200 status code into a remote application (in my case Slack; but you could modify the script to suit whatever service you happen to be using).</description>
    </item>
    
    <item>
      <title>Building Systems With Make</title>
      <link>http://www.integralist.co.uk/posts/building-systems-with-make/</link>
      <pubDate>Wed, 07 Oct 2015 13:00:00 +0100</pubDate>
      
      <guid>http://www.integralist.co.uk/posts/building-systems-with-make/</guid>
      <description>Introduction Simple Example Terminology Prerequisites How Make Decides What To Do Automatic variables Commands Targets As Prerequisites Accessing Targets Parsing Targets And Prerequisites Dynamic Targets Dereferencing (Variables and Macros) Functions  Filter Shell Eval Files  User-Defined Functions Conventions Revisiting The For Loop Example Includes Conclusion  
Introduction Most web developers use a build tool of some sort nowadays. Iâ€™m not refering to continuous integration software like Jenkins CI (a very popular build system), but the lower-level software it uses to actually acquire dependencies and construct your applications with.</description>
    </item>
    
  </channel>
</rss>